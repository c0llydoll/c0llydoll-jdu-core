const apps = require("../lib/apps");
const ticketClient = require("../lib/harbour-ticket-client");
const profileDb = require("../lib/models/profile");

module.exports = (app, public, private) => {

    public.get("/:requestedUserId", ticketClient.require, async (req, res, next) => {
        const requestedUserId = req.params.requestedUserId;
        const userId = req.userId;
        if (requestedUserId !== userId) return next({
            status: 401,
            message: `User is not permitted for accessing '${requestedUserId}'!`
        });

        const profile = await profileDb.findOne({ userId });
        if (!profile) return next({
            status: 401,
            message: `Can't find user of '${userId}'`
        });

        return res.send({
            userId: userId,
            username: profile.username,
            nameOnPlatform: profile.nameOnPlatform,
            accountIssues: null,
            communicationOptIn: true,
            communicationThirdPartyOptIn: false,
            country: profile.country,
            dateCreated: profile.dateCreated,
            dateAnonymized: null,
            dateOfBirth: profile.dateOfBirth,
            email: profile.email,
            firstName: profile.firstName,
            gender: profile.gender,
            hasAcceptedLegalOptins: true,
            lastName: profile.lastName,
            preferredLanguage: profile.preferredLanguage || "en",
            status: {
                autoGeneratedUsername: false,
                dateOfBirthApproximated: false,
                invalidEmail: false,
                missingRequiredInformation: false,
                pendingDeactivation: false,
                targetDeactivationDate: null,
                recoveringPassword: false,
                passwordUpdateRequired: false,
                reserved: false,
                changeEmailPending: false,
                inactiveAccount: false,
                generalStatus: "activated",
                suspiciousActivity: false,
                locked: false,
                minor: false,
                testAccount: false,
                phoneActivated: false,
                phoneSanctioned: false
            },
            phone: null,
            accountType: "Ubisoft"
        });
    });
};